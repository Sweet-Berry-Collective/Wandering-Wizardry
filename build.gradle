plugins {
	alias libs.plugins.quilt.loom
}

archivesBaseName = project.archives_base_name
version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/'
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
	modImplementation libs.quilt.loader
	modImplementation libs.quilted.fabric.api

	modImplementation include("com.terraformersmc.terraform-api:terraform-wood-api-v1:6.0.0-beta.2")
	modImplementation include("maven.modrinth:moremcmeta:v1.19.4-3.0.6-fabric")
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

def generate(String type, String input, String output) {
	println("deno run -A ./scripts/mod.ts ${type} ./data/${input} ./src/main/resources/${output}".execute().text)
}

def generate(String type, String output) {
	generate(type, type, output)
}

def transpile(String input, String output) {
	generate("transpile", input, output)
}

def loot(String input, String output) {
	generate("loot", input, output)
}

tasks.register("generateData") {
	doFirst {
		generate("lang", "assets/wwizardry/lang")
		generate("tags", "data")
		loot("basic_block_loot.fennec", "data/wwizardry/loot_tables/blocks")
		transpile("recipes", "data/wwizardry/recipes")
		transpile("loot", "data/wwizardry/loot_tables")
		transpile("world", "data/wwizardry/worldgen")
		transpile("mod", "")
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 17
	dependsOn "generateData"
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	filesMatching('LICENSE') {
		rename '^(LICENSE.*?)(\\..*)?$', "\$1_${archivesBaseName}\$2"
	}
}
